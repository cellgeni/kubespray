# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: heart-cell-atlas
# spec:
#   selector:
#     matchLabels:
#       app: heart-cell-atlas
#   replicas: 1
#   template:
#     metadata: 
#       name: heart-cell-atlas
#       labels:
#         app: heart-cell-atlas
#     spec:
#       volumes:
#         - name: indexfiles
#           emptyDir: {}
#       containers:
#       - image: nginx
#         imagePullPolicy: IfNotPresent
#         name: heart-cell-atlas
#         ports:
#         - containerPort: 80
#           name: http
#         command: ["/bin/sh", "-c", "cp -r /data/kubespray/sanger/sites/heartcellatlas/site/. /usr/share/nginx/html/ && nginx -g 'daemon off;'"]
#         volumeMounts:
#           - name: indexfiles
#             mountPath: /data
#         resources:
#           requests:
#             memory: "128M"
#             cpu: "0.1"
#           limits:
#             memory: "512M"
#             cpu: "0.7"
#       initContainers:
#       - name: pull-data
#         imagePullPolicy: IfNotPresent
#         image: alpine/git
#         command: ['/bin/sh', '-c', 'git -C /data/kubespray pull || git clone https://github.com/cellgeni/kubespray /data/kubespray']
#         volumeMounts:
#           - name: indexfiles
#             mountPath: /data
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: heart-cell-endothelial
# spec:
#   selector:
#     matchLabels:
#       app: heart-cell-endothelial
#   replicas: 1
#   template:
#     metadata: 
#       name: heart-cell-endothelial
#       labels:
#         app: heart-cell-endothelial
#     spec:
#       volumes:
#         - name: data
#           persistentVolumeClaim:
#             claimName: heart-cell-atlas-cellxgene-pvc
#       containers:
#       - image: quay.io/cellgeni/cellxgene:0.11.0
#         imagePullPolicy: IfNotPresent
#         name: heart-cell-endothelial
#         ports:
#         - containerPort: 5005
#           name: cellxgene
#         command: ["cellxgene", "launch", "/data/heart_endothelial_bbknn_ctl190723_annotated_raw.h5ad", "-t", "Endothelial cells", "--host", "0.0.0.0", "--port", "5005"]
#         volumeMounts:
#           - name: data
#             mountPath: /data
#         resources:
#           requests:
#             memory: "512M"
#             cpu: "0.5"
#           limits:
#             memory: "5Gi"
#             cpu: 1
#       initContainers:
#       - name: pull-data
#         imagePullPolicy: IfNotPresent
#         image: garland/aws-cli-docker
#         command: ['aws','--endpoint-url=https://cog.sanger.ac.uk', 's3', 'cp', 's3://cellgeni/heartcellatlas/heart_endothelial_bbknn_ctl190723_annotated_raw.h5ad', '/data']
#         env:
#           - name: AWS_ACCESS_KEY_ID
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_ACCESS_KEY_ID
#           - name: AWS_SECRET_ACCESS_KEY
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_SECRET_ACCESS_KEY
#         volumeMounts:
#           - name: data
#             mountPath: /data
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: heart-cell-stromal
# spec:
#   selector:
#     matchLabels:
#       app: heart-cell-stromal
#   replicas: 1
#   template:
#     metadata: 
#       name: heart-cell-stromal
#       labels:
#         app: heart-cell-stromal
#     spec:
#       volumes:
#         - name: data
#           persistentVolumeClaim:
#             claimName: heart-cell-atlas-cellxgene-pvc
#       containers:
#       - image: quay.io/cellgeni/cellxgene:0.11.0
#         imagePullPolicy: IfNotPresent
#         name: heart-cell-stromal
#         ports:
#         - containerPort: 5005
#           name: cellxgene
#         command: ["cellxgene", "launch", "/data/hca_heart_cdna-cd45_ctl190703_annotated.h5ad", "-t", "Heart Stromal Cells-only", "--host", "0.0.0.0", "--port", "5005"]
#         volumeMounts:
#           - name: data
#             mountPath: /data
#         resources:
#           requests:
#             memory: "512M"
#             cpu: "0.5"
#           limits:
#             memory: "8Gi"
#             cpu: 1
#       initContainers:
#       - name: pull-data
#         imagePullPolicy: IfNotPresent
#         image: garland/aws-cli-docker
#         command: ['aws','--endpoint-url=https://cog.sanger.ac.uk', 's3', 'cp', 's3://cellgeni/heartcellatlas/hca_heart_cdna-cd45_ctl190703_annotated.h5ad', '/data']
#         env:
#           - name: AWS_ACCESS_KEY_ID
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_ACCESS_KEY_ID
#           - name: AWS_SECRET_ACCESS_KEY
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_SECRET_ACCESS_KEY
#         volumeMounts:
#           - name: data
#             mountPath: /data
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: heart-cell-global-190527
# spec:
#   selector:
#     matchLabels:
#       app: heart-cell-global-190527
#   replicas: 1
#   template:
#     metadata: 
#       name: heart-cell-global-190527
#       labels:
#         app: heart-cell-global-190527
#     spec:
#       volumes:
#         - name: data
#           persistentVolumeClaim:
#             claimName: heart-cell-atlas-cellxgene-pvc
#       containers:
#       - image: quay.io/cellgeni/cellxgene:0.11.0
#         imagePullPolicy: IfNotPresent
#         name: heart-cell-global-190527
#         ports:
#         - containerPort: 5005
#           name: cellxgene
#         command: ["cellxgene", "launch", "/data/hca_heart_merged_QCed_annotated_ctl190527.h5ad", "-t", "Heart Global 190527", "--host", "0.0.0.0", "--port", "5005"]
#         volumeMounts:
#           - name: data
#             mountPath: /data
#         resources:
#           requests:
#             memory: "512M"
#             cpu: "0.5"
#           limits:
#             memory: "10Gi"
#             cpu: 1
#       initContainers:
#       - name: pull-data
#         imagePullPolicy: IfNotPresent
#         image: garland/aws-cli-docker
#         command: ['aws','--endpoint-url=https://cog.sanger.ac.uk', 's3', 'cp', 's3://cellgeni/heartcellatlas/hca_heart_merged_QCed_annotated_ctl190527.h5ad', '/data']
#         env:
#           - name: AWS_ACCESS_KEY_ID
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_ACCESS_KEY_ID
#           - name: AWS_SECRET_ACCESS_KEY
#             valueFrom:
#               secretKeyRef:
#                 name: s3-secret
#                 key: AWS_SECRET_ACCESS_KEY
#         volumeMounts:
#           - name: data
#             mountPath: /data
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heart-cell-endothelial-only
spec:
  selector:
    matchLabels:
      app: heart-cell-endothelial-only
  replicas: 1
  template:
    metadata: 
      name: heart-cell-endothelial-only
      labels:
        app: heart-cell-endothelial-only
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: heart-cell-atlas-cellxgene-pvc
      containers:
      - image: quay.io/cellgeni/cellxgene:0.11.0
        imagePullPolicy: IfNotPresent
        name: heart-cell-endothelial-only
        ports:
        - containerPort: 5005
          name: cellxgene
        command: ["cellxgene", "launch", "/data/heart_endothelial_leiden_ml190916_RAW.h5ad", "-t", "Endothelial-CellsOnly", "--host", "0.0.0.0", "--port", "5005"]
        volumeMounts:
          - name: data
            mountPath: /data
        resources:
          requests:
            memory: "512M"
            cpu: "0.5"
          limits:
            memory: "4Gi"
            cpu: 1
      initContainers:
      - name: pull-data
        imagePullPolicy: IfNotPresent
        image: garland/aws-cli-docker
        command: ['aws','--endpoint-url=https://cog.sanger.ac.uk', 's3', 'cp', 's3://cellgeni/heartcellatlas/heart_endothelial_leiden_ml190916_RAW.h5ad', '/data']
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: AWS_SECRET_ACCESS_KEY
        volumeMounts:
          - name: data
            mountPath: /data